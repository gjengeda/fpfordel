name: Build, push, and deploy

on:
  push:
    branches:
      - master 
      
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/fpfordel:${{ github.sha }}
  DOCKER_LOGIN: x-access-token
  DOCKER_PASSWORD: ${{ secrets.GPR }}
jobs:

  

  compile:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Compile
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GPR }}
        shell: bash
        run: |
          echo "Henter Oracle image"
          docker login --username $DOCKER_LOGIN --password $DOCKER_PASSWORD  docker.pkg.github.com
          docker pull docker.pkg.github.com/navikt/vtp/foreldrepenger-oracle
          echo "Starter Oracle image"
          docker run -d -p 1521:1521 --name oracle-xe -e ORACLE_DISABLE_ASYNCH_IO=true wnameless/oracle-xe-11g-r2
          docker ps
          docker exec -it -e ORACLE_SID=XE -e PATH=$PATH:$ORACLE_HOME/bin -e ORACLE_HOME=/u01/app/oracle/product/11.2.0/xe `docker ps | tail -1 | awk  '{ print $1}'` /bin/bash
          echo "Bygger $(echo $GITHUB_SHA | cut -c1-7)"
          mvn --settings .github/workflows/.m2/settings.xml clean install
          echo "Built artifacts"
 
  dockerize:
    needs: compile
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build and publish Docker image
      env:
        GITHUB_TOKEN: ${{ secrets.GPR }}
      run: |
        docker build --tag ${IMAGE} .
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
        docker push ${IMAGE}

  deploy:
    name: Deploy to NAIS
    needs: dockerize
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: nais/deploy/actions/deploy@v1
      env:
        PRINT_PAYLOAD: true
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-fss
        RESOURCE: naiserator.yml
        VARS: dev-fss-t4.yml